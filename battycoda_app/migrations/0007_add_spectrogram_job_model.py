# Generated by Django 5.2.1 on 2025-05-22 22:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("battycoda_app", "0006_remove_is_admin_cache"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SpectrogramJob",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Display name for the spectrogram job", max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current status of the spectrogram generation job",
                        max_length=20,
                    ),
                ),
                (
                    "celery_task_id",
                    models.CharField(
                        blank=True,
                        help_text="Celery task ID for tracking the background job",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("progress", models.IntegerField(default=0, help_text="Progress percentage (0-100)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "output_file_path",
                    models.CharField(
                        blank=True, help_text="Path to the generated spectrogram file", max_length=500, null=True
                    ),
                ),
                (
                    "output_file_url",
                    models.CharField(
                        blank=True, help_text="URL to access the generated spectrogram", max_length=500, null=True
                    ),
                ),
                ("error_message", models.TextField(blank=True, help_text="Error message if the job failed", null=True)),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Spectrogram generation parameters (sample rate, window size, etc.)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this job",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spectrogram_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group this job belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spectrogram_jobs",
                        to="battycoda_app.group",
                    ),
                ),
                (
                    "recording",
                    models.ForeignKey(
                        help_text="Recording to generate spectrogram for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spectrogram_jobs",
                        to="battycoda_app.recording",
                    ),
                ),
            ],
            options={
                "verbose_name": "Spectrogram Job",
                "verbose_name_plural": "Spectrogram Jobs",
                "ordering": ["-created_at"],
            },
        ),
    ]
